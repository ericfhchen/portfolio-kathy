'use client'

import { useState, useEffect } from 'react'
import MuxPlayer from '@mux/mux-player-react'

export default function VideoGallery({ videos, name, coverVideo }) {
  // Log the original videos array for debugging
  useEffect(() => {
    console.log('Videos from props:', JSON.stringify(videos, null, 2));
    console.log('Cover video from props:', JSON.stringify(coverVideo, null, 2));
  }, [videos, coverVideo]);

  // Filter out invalid videos (those without a playback ID)
  const validVideos = videos?.filter(video => {
    if (!video?.asset) return false;
    // Check for playbackId in the expected location for Mux videos
    return !!video.asset.playbackId;
  }) || [];
  
  // If no valid videos but we have a cover video, use that instead
  const effectiveVideos = validVideos.length > 0 
    ? validVideos 
    : (coverVideo && coverVideo.playbackId ? [{ asset: coverVideo, caption: name }] : []);
  
  // Log the filtered videos
  useEffect(() => {
    console.log('Valid videos after filtering:', effectiveVideos.length);
  }, [effectiveVideos]);
  
  const [currentVideoIndex, setCurrentVideoIndex] = useState(0);
  
  const goToNextVideo = () => {
    if (effectiveVideos && effectiveVideos.length > 0) {
      setCurrentVideoIndex((prev) => 
        prev === effectiveVideos.length - 1 ? 0 : prev + 1
      );
    }
  };
  
  const goToPrevVideo = () => {
    if (effectiveVideos && effectiveVideos.length > 0) {
      setCurrentVideoIndex((prev) => 
        prev === 0 ? effectiveVideos.length - 1 : prev - 1
      );
    }
  };
  
  // If there are no valid videos, display a message
  if (!effectiveVideos || effectiveVideos.length === 0) {
    return (
      <div className="fixed inset-0 flex items-center justify-center">
        No videos available. Please add videos in Sanity Studio.
      </div>
    );
  }
  
  // Get the current video
  const currentVideo = effectiveVideos[currentVideoIndex];
  const playbackId = currentVideo?.asset?.playbackId;
  
  if (!playbackId) {
    return (
      <div className="fixed inset-0 flex items-center justify-center">
        Video playback ID not available
      </div>
    );
  }
  
  return (
    <div className="video-gallery">
      {/* Videos gallery - one video at a time with navigation */}
      <div className="fixed inset-0 flex items-center justify-center">
        <div 
          className="w-[100vw] h-[85vh] md:w-[75vw] md:h-[75vh] flex items-center justify-center"
        >
          <div className="relative w-full h-full flex items-center justify-center">
            <MuxPlayer
              playbackId={playbackId}
              streamType="on-demand"
              className="max-w-full max-h-full"
              title={currentVideo.caption || `${name} - Video ${currentVideoIndex + 1}`}
              style={{
                '--media-object-fit': 'contain',
                '--media-object-position': 'center',
                '--controls-backdrop-color': 'rgba(0, 0, 0, 0.5)',
                height: '100%',
                width: '100%'
              }}
            />
          </div>
        </div>
      </div>
      
      {/* Caption if available */}
      {currentVideo.caption && (
        <div className="fixed bottom-12 left-0 right-0 text-center">
          <p className="text-sm">{currentVideo.caption}</p>
        </div>
      )}
      
      {/* Navigation buttons - only show if there's more than one video */}
      {effectiveVideos.length > 1 && (
        <div className="fixed bottom-0 left-0 right-0 mb-2.5 flex justify-center gap-8">
          <button 
            onClick={goToPrevVideo} 
            className="uppercase hover:opacity-60 transition-opacity leading-[1]"
          >
            Prev
          </button>
          <button 
            onClick={goToNextVideo} 
            className="uppercase hover:opacity-60 transition-opacity leading-[1]"
          >
            Next
          </button>
        </div>
      )}
    </div>
  );
} 